[{"id":"7552b1fa.0de6","type":"tab","label":"Modbus Getter","disabled":false,"info":""},{"id":"1431bed8.56ee51","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":180,"wires":[["f72c4f38.ac8c3"],[]]},{"id":"7eeef03a.b0998","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 800 , \n                'quantity': 99 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":180,"wires":[["1431bed8.56ee51"]]},{"id":"159356ff.82c769","type":"inject","z":"7552b1fa.0de6","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"1","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":100,"y":180,"wires":[["7eeef03a.b0998","1945f192.7dba4e","9cf40c5f.02389","fde8a4f0.b44ed8","ba5c6d6.6717c9","aa7f64b8.ba7c08","58e997f3.0de118"]]},{"id":"f72c4f38.ac8c3","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,18,20,30,32,42,44,54,56,66,68,78,80,90,92];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n        // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-10-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-10-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-1-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-1-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-1-7-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-1-7-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-1-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-1-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-A-1-6-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-A-1-6-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-A-1-3-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-A-1-3-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-A-1-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-A-1-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-A-1-4-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-A-1-4-Humidity\"] = extractedElements[15] / 10; \n;\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":180,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"59b2b976.c1f0e8","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-8-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-8-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-9-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-9-Humidity\"] = extractedElements[3] / 10; \n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":240,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"8849fe4e.2674b","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38,48,50,60,62,72,74,84,86];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-11-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-11-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-12-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-12-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-2-1-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-2-1-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-2-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-2-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-A-2-3-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-A-2-3-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-A-2-4-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-A-2-4-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-A-2-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-A-2-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-A-2-6-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-A-2-6-Humidity\"] = extractedElements[15] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":300,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"51167aa.cf7f284","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\nvar indicesToExtract = [0, 2, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86,96,98];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-B-1-7-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-B-1-7-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-B-1-8-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-B-1-8-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-1-9-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-1-9-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-1-10-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-1-10-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-2-1-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-2-1-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-B-2-2-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-B-2-2-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-B-2-3-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-B-2-3-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-B-2-4-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-B-2-4-Humidity\"] = extractedElements[15] / 10;\n    labeledData[\"Zone-B-2-5-Temperature\"] = extractedElements[16] / 10;\n    labeledData[\"Zone-B-2-5-Humidity\"] = extractedElements[17] / 10; \n \n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":420,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"f2b076ff.dea2e8","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-2-9-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-2-9-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-2-10-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-2-10-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-2-11-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-2-11-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-2-12-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-2-12-Humidity\"] = extractedElements[7] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":540,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"7b702b1a.271314","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38,48,50];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-B-2-6-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-B-2-6-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-B-2-7-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-B-2-7-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-2-8-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-2-8-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-2-9-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-2-9-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-2-10-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-2-10-Humidity\"] = extractedElements[9] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":480,"wires":[["6f4e1406.fae22c","3cd3bd56.246042","54144bd8.105d54"]]},{"id":"aafe3246.d1588","type":"function","z":"7552b1fa.0de6","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\nvar indicesToExtract = [0, 2, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-2-7-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-2-7-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-2-8-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-2-8-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-1-1-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-1-1-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-1-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-1-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-1-3-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-1-3-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-B-1-4-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-B-1-4-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-B-1-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-B-1-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-B-1-6-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-B-1-6-Humidity\"] = extractedElements[15] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":680,"y":360,"wires":[["3cd3bd56.246042","6f4e1406.fae22c","54144bd8.105d54"]]},{"id":"1945f192.7dba4e","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 902 , \n                'quantity': 20 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":240,"wires":[["190e65d8.18d11a"]]},{"id":"9cf40c5f.02389","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 3110 , \n                'quantity': 99 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":300,"wires":[["273be0ce.91285"]]},{"id":"fde8a4f0.b44ed8","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 3206 , \n                'quantity': 99 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":360,"wires":[["e9e779af.bbdfc8"]]},{"id":"ba5c6d6.6717c9","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 3302 , \n                'quantity': 99 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":420,"wires":[["51f2cd3f.0a7344"]]},{"id":"aa7f64b8.ba7c08","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 3410 , \n                'quantity': 70 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":480,"wires":[["9556425a.f1ff6"]]},{"id":"58e997f3.0de118","type":"function","z":"7552b1fa.0de6","name":"","func":"msg.payload = { \n                'fc': 4, \n                'unitid': 1, \n                'address': 4190 , \n                'quantity': 50 }; \nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":260,"y":540,"wires":[["f92d787b.19fd58"]]},{"id":"190e65d8.18d11a","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":240,"wires":[["59b2b976.c1f0e8"],[]]},{"id":"273be0ce.91285","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":300,"wires":[["8849fe4e.2674b"],[]]},{"id":"e9e779af.bbdfc8","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":360,"wires":[["aafe3246.d1588"],[]]},{"id":"51f2cd3f.0a7344","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":420,"wires":[["51167aa.cf7f284"],[]]},{"id":"9556425a.f1ff6","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":480,"wires":[["7b702b1a.271314"],[]]},{"id":"f92d787b.19fd58","type":"modbus-flex-getter","z":"7552b1fa.0de6","name":"","showStatusActivities":false,"showErrors":false,"logIOActivities":false,"server":"a3eebb31.453848","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"keepMsgProperties":false,"x":470,"y":540,"wires":[["f2b076ff.dea2e8"],[]]},{"id":"6f4e1406.fae22c","type":"debug","z":"7552b1fa.0de6","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":960,"y":460,"wires":[]},{"id":"3cd3bd56.246042","type":"ubidots_out","z":"7552b1fa.0de6","name":"","token":"BBFF-C8aoataYRnsGA7pDTzs8fDf2BKbTDU","label_device":"","device_label":"slds","tier":"business","tls_checkbox":true,"x":970,"y":360,"wires":[]},{"id":"54144bd8.105d54","type":"http request","z":"7552b1fa.0de6","name":"Thingsboard http request","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://demo.thingsboard.io/api/v1/AbflqaEeAfQ9bIcqW8ns/telemetry","tls":"","persist":false,"proxy":"","authType":"","x":1010,"y":260,"wires":[[]]},{"id":"a3eebb31.453848","type":"modbus-client","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"192.168.23.10","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectOnTimeout":true,"reconnectTimeout":"2000","parallelUnitIdsAllowed":true}]