[{"id":"7c2fdaa5.3f3a74","type":"tab","label":"Modbus Read","disabled":false,"info":""},{"id":"644a6cbf.754444","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"800","quantity":"99","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":280,"wires":[["998a423e.8172d"],[]]},{"id":"96c98436.b28408","type":"debug","z":"7c2fdaa5.3f3a74","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":740,"y":560,"wires":[]},{"id":"104efbc6.8a8554","type":"ubidots_out","z":"7c2fdaa5.3f3a74","name":"","token":"BBFF-C8aoataYRnsGA7pDTzs8fDf2BKbTDU","label_device":"","device_label":"slds","tier":"business","tls_checkbox":true,"x":750,"y":460,"wires":[]},{"id":"998a423e.8172d","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,18,20,30,32,42,44,54,56,66,68,78,80,90,92];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n        // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-10-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-10-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-1-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-1-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-1-7-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-1-7-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-1-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-1-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-A-1-6-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-A-1-6-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-A-1-3-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-A-1-3-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-A-1-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-A-1-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-A-1-4-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-A-1-4-Humidity\"] = extractedElements[15] / 10; \n;\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":280,"wires":[["96c98436.b28408","104efbc6.8a8554","77c8bb2a.547b84"]]},{"id":"97f5ae3c.cab05","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"902","quantity":"20","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":340,"wires":[["ab4b354a.be7168"],[]]},{"id":"ab4b354a.be7168","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-8-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-8-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-9-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-9-Humidity\"] = extractedElements[3] / 10; \n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":340,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"324cae1e.b20982","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"3110","quantity":"99","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":400,"wires":[["2c35816b.3877de"],[]]},{"id":"2c35816b.3877de","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38,48,50,60,62,72,74,84,86];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-1-11-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-1-11-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-1-12-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-1-12-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-2-1-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-2-1-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-2-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-2-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-A-2-3-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-A-2-3-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-A-2-4-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-A-2-4-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-A-2-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-A-2-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-A-2-6-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-A-2-6-Humidity\"] = extractedElements[15] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":400,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"fd11bdc6.d4294","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"3302","quantity":"99","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":520,"wires":[["acf528fb.f604c8"],[]]},{"id":"acf528fb.f604c8","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\nvar indicesToExtract = [0, 2, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86,96,98];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-B-1-7-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-B-1-7-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-B-1-8-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-B-1-8-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-1-9-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-1-9-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-1-10-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-1-10-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-2-1-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-2-1-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-B-2-2-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-B-2-2-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-B-2-3-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-B-2-3-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-B-2-4-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-B-2-4-Humidity\"] = extractedElements[15] / 10;\n    labeledData[\"Zone-B-2-5-Temperature\"] = extractedElements[16] / 10;\n    labeledData[\"Zone-B-2-5-Humidity\"] = extractedElements[17] / 10; \n \n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":520,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"10030084.bf77bf","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"4190","quantity":"50","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":640,"wires":[["937a965f.864618"],[]]},{"id":"937a965f.864618","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-2-9-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-2-9-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-2-10-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-2-10-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-A-2-11-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-A-2-11-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-A-2-12-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-A-2-12-Humidity\"] = extractedElements[7] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":640,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"47464989.37f748","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"3410","quantity":"70","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":580,"wires":[["f7147446.5a6eb8"],[]]},{"id":"f7147446.5a6eb8","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\n var indicesToExtract = [0,2,12,14,24,26,36,38,48,50];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-B-2-6-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-B-2-6-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-B-2-7-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-B-2-7-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-2-8-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-2-8-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-2-9-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-2-9-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-2-10-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-2-10-Humidity\"] = extractedElements[9] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":580,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"eb6242b6.74ec9","type":"modbus-read","z":"7c2fdaa5.3f3a74","name":"slds","topic":"temperature","showStatusActivities":false,"logIOActivities":false,"showErrors":false,"unitid":"1","dataType":"InputRegister","adr":"3206","quantity":"99","rate":"1","rateUnit":"m","delayOnStart":false,"startDelayTime":"","server":"244b2c869a2b3ad3","useIOFile":false,"ioFile":"","useIOForPayload":false,"emptyMsgOnFail":false,"x":250,"y":460,"wires":[["84caa29.6cd906"],[]]},{"id":"84caa29.6cd906","type":"function","z":"7c2fdaa5.3f3a74","name":"function","func":"// Sample Function Node Code to Send Labeled Temperature Readings\nvar arrayData = msg.payload; // Assuming msg.payload contains the array data\n\n// Define the array indices to extract\nvar indicesToExtract = [0, 2, 12, 14, 24, 26, 36, 38, 48, 50, 60, 62, 72, 74, 84, 86];\n\n// Create an empty array to store the extracted elements\n var extractedElements = [];\n\n// Check if the received data is an array\n if (Array.isArray(arrayData)) {\n    // Loop through each index in indicesToExtract array\n    for (var i = 0; i < indicesToExtract.length; i++) {\n       var index = indicesToExtract[i];\n        // Check if the index is within the valid range of the array\n        if (index >= 0 && index < arrayData.length) {\n            // If the index is valid, extract the element and add it to the extractedElements array\n            extractedElements.push(arrayData[index]);\n        }\n    }\n}\n\n// Create an empty object to store the labeled temperature readings\nvar labeledData = {};\n\n// Check if the received data is an array\nif (Array.isArray(extractedElements)) {\n    // Loop through each element in the array\n    //for (var i = 0; i < extractedElements.length; i++) {\n    // Add the labeled temperature reading to the object\n    //    labeledTemperatures[\"temperature\" + (i + 1)] = extractedElements[i];\n    //}\n\n    labeledData[\"Zone-A-2-7-Temperature\"] = extractedElements[0] / 10;\n    labeledData[\"Zone-A-2-7-Humidity\"] = extractedElements[1] / 10;\n    labeledData[\"Zone-A-2-8-Temperature\"] = extractedElements[2] / 10;\n    labeledData[\"Zone-A-2-8-Humidity\"] = extractedElements[3] / 10;\n    labeledData[\"Zone-B-1-1-Temperature\"] = extractedElements[4] / 10;\n    labeledData[\"Zone-B-1-1-Humidity\"] = extractedElements[5] / 10;\n    labeledData[\"Zone-B-1-2-Temperature\"] = extractedElements[6] / 10;\n    labeledData[\"Zone-B-1-2-Humidity\"] = extractedElements[7] / 10;\n    labeledData[\"Zone-B-1-3-Temperature\"] = extractedElements[8] / 10;\n    labeledData[\"Zone-B-1-3-Humidity\"] = extractedElements[9] / 10;\n    labeledData[\"Zone-B-1-4-Temperature\"] = extractedElements[10] / 10;\n    labeledData[\"Zone-B-1-4-Humidity\"] = extractedElements[11] / 10;\n    labeledData[\"Zone-B-1-5-Temperature\"] = extractedElements[12] / 10;\n    labeledData[\"Zone-B-1-5-Humidity\"] = extractedElements[13] / 10;\n    labeledData[\"Zone-B-1-6-Temperature\"] = extractedElements[14] / 10;\n    labeledData[\"Zone-B-1-6-Humidity\"] = extractedElements[15] / 10; \n\n\n}\n\n// Set the labeled temperatures object as the payload of the message\nmsg.payload = labeledData;\n\n// Send the modified message to the next node in the flow\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":440,"y":460,"wires":[["104efbc6.8a8554","96c98436.b28408","77c8bb2a.547b84"]]},{"id":"77c8bb2a.547b84","type":"mqtt out","z":"7c2fdaa5.3f3a74","name":"","topic":"v1/devices/me/telemetry","qos":"0","retain":"","broker":"d2112564.15c5d8","x":790,"y":360,"wires":[]},{"id":"244b2c869a2b3ad3","type":"modbus-client","name":"","clienttype":"tcp","bufferCommands":true,"stateLogEnabled":false,"queueLogEnabled":false,"tcpHost":"192.168.1.230","tcpPort":"502","tcpType":"DEFAULT","serialPort":"/dev/ttyUSB","serialType":"RTU-BUFFERD","serialBaudrate":"9600","serialDatabits":"8","serialStopbits":"1","serialParity":"none","serialConnectionDelay":"100","unit_id":"1","commandDelay":"1","clientTimeout":"1000","reconnectOnTimeout":true,"reconnectTimeout":"2000","parallelUnitIdsAllowed":true},{"id":"d2112564.15c5d8","type":"mqtt-broker","name":"Demo Thingsboard","broker":"demo.thingsboard.io","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]